{
	"name": "Task2",
	"properties": {
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "AzureSqlSink",
						"writeBehavior": "insert",
						"sqlWriterUseTableLock": false,
						"tableOption": "autoCreate",
						"disableMetricsCollection": false
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "SqlServerTable1",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "dynamicazuresql1",
						"type": "DatasetReference",
						"parameters": {
							"Schema_name": "Balaji",
							"Table_name": "dimAccount"
						}
					}
				]
			},
			{
				"name": "If Condition1",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@empty(activity('Copy data1').output.errors)",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "Script2",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase2",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "NonQuery",
										"text": "F OBJECT_ID('Balaji.Monitor_Pipeline') IS NULL\nCREATE TABLE Balaji.Monitor_Pipeline \n( \nID INT IDENTITY(1,1) \n,\tPipelineName VARCHAR(255) \n,\tRun_Status VARCHAR(255) \n,\tPipeline_trigger_time DATETIME \n);\n"
									},
									{
										"type": "NonQuery",
										"text": "IF OBJECT_ID('Balaji.Log_Error') IS NULL\nCREATE TABLE Balaji.Log_Error \n( \nID INT IDENTITY(1,1) \n,\tPipelineName VARCHAR(255) \n,\tError_Msg VARCHAR(MAX) \n,\tPipeline_trigger_time DATETIME \n); "
									},
									{
										"parameters": [
											{
												"name": "PipelineName",
												"type": "String",
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "PipelineTime",
												"type": "Datetime",
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"direction": "Input"
											}
										],
										"type": "NonQuery",
										"text": "INSERT INTO Balaji.Monitor_Pipeline(PipelineName,Run_Status,Pipeline_trigger_time) VALUES(@PipelineName,'Failure',@PipelineTime)"
									},
									{
										"parameters": [
											{
												"name": "PipelineName",
												"type": "String",
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "PipelineError",
												"type": "String",
												"value": {
													"value": "@activity('Copy data1').output.errors[0].message",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "PipelineTime",
												"type": "Datetime",
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"direction": "Input"
											}
										],
										"type": "NonQuery",
										"text": "INSERT INTO Balaji.Log_Error(PipelineName,Error_Msg,Pipeline_trigger_time) VALUES(@PipelineName,@PipelineError,@PipelineTime)"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					],
					"ifTrueActivities": [
						{
							"name": "Script1",
							"type": "Script",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"linkedServiceName": {
								"referenceName": "AzureSqlDatabase2",
								"type": "LinkedServiceReference"
							},
							"typeProperties": {
								"scripts": [
									{
										"type": "NonQuery",
										"text": "IF OBJECT_ID('Balaji.Monitor_Pipeline') IS NULL\nCREATE TABLE Balaji.Monitor_Pipeline \n( \nID INT IDENTITY(1,1) \n,\tPipelineName VARCHAR(255) \n,\tRun_Status VARCHAR(255) \n,\tPipeline_trigger_time DATETIME \n);"
									},
									{
										"parameters": [
											{
												"name": "PipelineName",
												"type": "String",
												"value": {
													"value": "@pipeline().Pipeline",
													"type": "Expression"
												},
												"direction": "Input"
											},
											{
												"name": "PipelineTime",
												"type": "Datetime",
												"value": {
													"value": "@pipeline().TriggerTime",
													"type": "Expression"
												},
												"direction": "Input"
											}
										],
										"type": "NonQuery",
										"text": "INSERT INTO Balaji.Monitor_Pipeline(PipelineName,Run_Status,Pipeline_trigger_time) VALUES(@PipelineName,'Success',@PipelineTime)"
									}
								],
								"scriptBlockExecutionTimeout": "02:00:00"
							}
						}
					]
				}
			}
		],
		"annotations": []
	}
}